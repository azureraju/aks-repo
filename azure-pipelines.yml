# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '1.9.8'

        
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks-repo'
          backendServiceArm: 'Pay-As-You-Go(e58b54d7-2056-4c1d-88fd-c6b1bb1a406d)'
          backendAzureRmOverrideSubscriptionID: 'e58b54d7-2056-4c1d-88fd-c6b1bb1a406d'
          backendAzureRmResourceGroupName: 'rgp-starg'
          backendAzureRmStorageAccountName: 'devopstorage202'
          backendAzureRmContainerName: 'containerfile'
          backendAzureRmKey: 'aks.tfstate'

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks-repo'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/aks-repo'
          artifact: 'aks-repo-out'
          publishLocation: 'pipeline'
